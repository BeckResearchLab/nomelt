"""Use NOMELT as a zero shot estimator and compare to experimental data.
"""
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os
import json
import MDAnalysis as mda
import io
import copy

from nomelt.model import NOMELTModel
from yaml import safe_load

sns.set_style('ticks')
sns.set_context('talk')

# variant sets from https://chemistry-europe.onlinelibrary.wiley.com/doi/10.1002/cctc.202101349

LovD_seqs = {
    'LovD': "MGSIIDAAAAADPVVLMETAFRKAVKSRQIPGAVIMARDASGNLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNARLRERRGKITLRHLLTHTSGLSYVFLHPLLREYMAQGHLQSAEKFGIQSRLAPPAVNDPGAEWIYGANLDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADQTHRNSADGRLRYDDSVYFRADGEECFGGQGVFSGPGSYMKVLHSLLKRDGLLLQPQTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSLTFGGGPNIVWQIDPKAGLCTLAFFQLEPWNDPVCRDLTRTFEHAIYAQYQQG",
    'LovD1': "MGSIIDAAAAADPVVLMETAFRKAVKSRQIPGAVIMARDASGNLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNARLRERRGKITLRHLLTHTSGLSYVFLHPLLREYMAQGHLQSAEKFGIQSRLAPPAVNDPGAEWIYGANLDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADQTHRNSADGRLRYDDSVYFRADGEECFGGQGVFSGPGSYMKVLHSLLKRDGLLLQPQTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIVWQIDPKAGLCTLAFFQLEPWNDPVCRDLTRTFEHAIYAQYQQG",
    'LovD2': "MGSIIDAAAAADPVVLMETAFRKAVKSRQIPGAVIMARDASGNLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYMAQGHLQSAEKFGIQSRFAPPLVNDPGAEWIYGASLDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADQTHRNSSDGRLRYDDSVYFRADGEECFGGQGVFSGPGSYMKVLHSLLKRDGLLLQPQTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIVWQIDPKAGLCTLAFFQLEPWNDPVCRDLTRTFEHAIYAQYQQG",
    'LovD3': "MGSIIDAAAAADPVVLMETAFRKAVKSRQIPGAVIMARDASGNLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYMAQGHLQSAEKFGIQSRFAPPLVNDPGAEWIYGASLDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADQTHRNSSDGRLRYDDSVYFRADGEECFGGQGVFSSPGSYMKVLHSLLKRDGLLLQPQTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIVWQIDPKAGLCTLAFFQLEPWNDPVCRDLTRTFEHAIYAQYQQG",
    'LovD4': "MGSIIDAAAAADPVVLMETAFRKAVKSRQIPGAVIMARDASGNLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYVAQGHLQSAEKFGIQNRFAPPLVNDPGAEWIYGASLDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADQTHRNSSDGRLRYDDSVYFRADGEECFGGQGVFSSPGSYMKVLHSLLKRDGLLLQPQTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIVWQIDPKAGLCTLAFFQLEPWNDPVCRDLTRTFEHAIYAQYQQG",
    'LovD5': "MGSIIDAAVAADPVVLMETAFRKAVESRQIPGAVIMARDASGNLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYVAQGHLQSAEKFGIQNRFAPPLVNDPGAEWIYGASIDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADQTHRNSSDGKLRYDDSVYFRADGEECFGGQGVFSSPGSYMKVLHSLLKRDGLLLQPETVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIVWQIDPKAGLCTLVFFQLEPWNDPVCRDLTRTFEHAIYAQYQQG",
    'LovD6': "MGSIIDAAVAADPVVLMETAFRKAVESRQIPGAVIMARDASGRLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYVAQGHLQGAEKFGIQNRFAPPLVNDPGAEWIYGAGIDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADMTHRNSSDGKLRYDDSVYFRADGEECFGGQGVFSSPGSYMKVLHSLLKRDGLLLQPETVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIIWQIDPKAGLCTLVFFQLEPWNDPVCRDLTRTFEKAIYAQYQQG",
    'LovD7': "MGSIIDAAVAADPVVLMETAFRKAVESRQIPGAVIMARDASGRLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYVAQGHLQGAEKFGIQNRFAPPLVNDPGAEWIYGAGIDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADMTHRNSSDGKLRYDDTVYFRVDGEECFGGQGVFSSPGSYMKVLHSLLKRDGLLLQPGTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIIWQIDPKAGLCTLVFFQLEPWSDPVCRDLTRTFEKAIYAQYQQG",
    'LovD8': "MGSNIDAAVAADPVVLMETAFRKAVESSQIPGAVIMARDASGRLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVDLDETVDRLLPDLSAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYVAQGHLQGAEKFGIQNRFAPPLVNDPGAEWIYGAGIDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADMTHRNSSDGKLRYDDTVYFRHDGEECFGGQGVFSSPGSYMKVLHSLLKRDGLLLQPGTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVLRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIIWQIDPKAGLCTLVFFQLEPWSDPVCRDLTRTFEKAIYAQYQQG",
    'LovD9': "MGSNIDAAVAADPVVLMETAFRKAVESSQIPGAVLMARDASGRLNYTRCFGARTVRRDENNQLPPLQVDTPCRLASATKLLTTIMALQCMERGLVRLDETVDRLLPDLCAMPVLEGFDDAGNPRLRERRGKITLRHLLTHTSGLSYVFLHPLLREYVAQGHLQGAEKFGIQNRFAPPLVNDPGAEWIYGAGIDWAGKLVERATGLDLEQYLQENICAPLGITDMTFKLQQRPDMLARRADMTHRNSSDGKLRYDDTVYFRHDGEECFGGQGVFSSPGSYMKVLHSLLKRDGLLLQPGTVDLMFQPALEPRLEEQMNQHMDASPHINYGGPMPMVMRRSFGLGGIIALEDLDGENWRRKGSMTFGGGPNIIWQIDPKAGLCTLVFFQLEPWSDPVCRDLTRTFEKAIYAQYQQG"
}
LovD_temperatures = [38.5, 39.5, 44.0, 44.3, 45.0, 46.0, 52.0, 49.0, 49.3, 50.8]

if __name__ == "__main__":
    with open('./params.yaml', 'r') as f:
        params = safe_load(f)

    hyperparams = params['model']['model_hyperparams']
    model = NOMELTModel('./data/nomelt-model-full/model', **hyperparams)

    lovd_variants = list(LovD_seqs.values())[1:]
    lovd_wt = LovD_seqs['LovD']  

    wt_score, variant_scores = model.score_variants(lovd_wt, lovd_variants)
    lovd_scores = [0.0] + variant_scores

    fig, ax = plt.subplots(figsize=(4, 4))
    sns.regplot(x=LovD_temperatures, y=lovd_scores, ax=ax)
    ax.set_xlabel('Melting Temperature (Â°C)')
    ax.set_ylabel('NOMELT Logit Score')

    plt.savefig('./data/plots/lovd_scores.png', dpi=300, bbox_inches='tight')
    # save the data too
    with open('./data/nomelt-model-full/zero_shot_estimated.json', 'w') as f:
        json.dump(
            {'lovd': {'temps': LovD_temperatures, 'scores': lovd_scores}},
            f
        )